{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Array","from","length","Math","ceil","_","i","prevPage","nextPage","className","cn","disabled","href","onClick","event","preventDefault","map","page","active","App","useState","setPerPage","setCurrentPage","fromItem","toItem","items","to","numbers","n","push","getNumbers","id","onChange","e","Number","target","value","defaultValue","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAQC,MAAMC,KAAK,CACvBC,OAAQC,KAAKC,KAAKT,EAAQC,KACzB,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KAEXC,EAAWV,EAAc,EAAIA,EAAc,EAAI,EAC/CW,EAAWX,EAAcE,EAAMG,OAASL,EAAc,EAAIE,EAAMG,OAYtE,OACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,UAAWJ,GAAYA,IAAaV,IAFxC,SAKE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,iBAAgBL,GAAYA,IAAaV,EACzCgB,QAtBgB,SAACC,GACvBA,EAAMC,iBACNjB,EAAaS,IAeT,oBAWAR,EAAMiB,KAAI,SAACC,GAAD,OACR,oBAEER,UAAWC,IACT,YAAa,CAAEQ,OAAQD,IAASpB,IAHpC,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMK,GACVJ,QAAS,kBAAMf,EAAamB,IAJ9B,SAMGA,KAXEA,MAiBX,oBAAIR,UAAWC,IACb,YACA,CAAEC,UAAWH,GAAYA,IAAaX,IAFxC,SAKE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,iBAAgBJ,GAAYA,IAAaX,EACzCgB,QApDgB,SAACC,GACvBA,EAAMC,iBACNjB,EAAaU,IA6CT,wBCnEKW,EAAgB,WAC3B,IAEA,EAA8BC,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoByB,EAApB,KAEMC,GAAY1B,EAAc,GAAKD,EAAU,EACzC4B,EAAS3B,EAAcD,EANf,MAMyCC,EAAcD,EAE/D6B,ECdD,SAAoBxB,EAAcyB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAI3B,EAAM2B,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDOOG,CAAWP,EAAUC,GAWnC,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC0B,EADjC,cAC+CC,EAD/C,eAvBU,GAuBV,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,SAvBW,SAACC,GACpBZ,EAAWa,OAAOD,EAAEE,OAAOC,QAC3Bd,EAAe,IAsBPe,aAAczC,EALhB,UAOE,wBAAQwC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAjDQ,GAkDRC,QAASA,EACTC,YAAaA,EACbC,aArCmB,SAACmB,GACxBK,EAAeL,MAsCb,6BAEGQ,EAAMT,KAAI,SAACuB,GAAD,OACT,oBAAe,UAAQ,OAAvB,wBACWA,IADFA,YE5DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.71945353.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination:React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const pages = Array.from({\n    length: Math.ceil(total / perPage),\n  }, (_, i) => i + 1);\n\n  const prevPage = currentPage > 1 ? currentPage - 1 : 1;\n  const nextPage = currentPage < pages.length ? currentPage + 1 : pages.length;\n\n  const handlePrevClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    onPageChange(prevPage);\n  };\n\n  const handleNextClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    onPageChange(nextPage);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: !prevPage || prevPage === currentPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={!prevPage || prevPage === currentPage}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map((page) => (\n          <li\n            key={page}\n            className={cn(\n              'page-item', { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))\n\n      }\n      <li className={cn(\n        'page-item',\n        { disabled: !nextPage || nextPage === currentPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={!nextPage || nextPage === currentPage}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const fromItem = (currentPage - 1) * perPage + 1;\n  const toItem = currentPage * perPage > total ? total : currentPage * perPage;\n\n  const items = getNumbers(fromItem, toItem);\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n            defaultValue={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={handlePageChange}\n      />\n      <ul>\n\n        {items.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}