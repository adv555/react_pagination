{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pages","Array","length","Math","ceil","_","i","prevPage","nextPage","isDisabled","page","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","active","concat","items","App","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setPerPage","_useState3","_useState4","setCurrentPage","fromItem","toItem","visibleItems","id","onChange","e","Number","target","value","set","defaultValue","option","htmlFor","toString","item","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.4cfe089e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination:React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const pages = Array.from({\n    length: Math.ceil(total / perPage),\n  }, (_, i) => i + 1);\n\n  const prevPage = currentPage > 1 ? currentPage - 1 : 1;\n  const nextPage = currentPage < pages.length ? currentPage + 1 : pages.length;\n\n  const isDisabled = (page: number) => {\n    return !page || page === currentPage;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isDisabled(prevPage) },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isDisabled(prevPage)}\n          onClick={() => onPageChange(prevPage)}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map((page) => (\n          <li\n            key={page}\n            className={cn(\n              'page-item', { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))\n\n      }\n      <li className={cn(\n        'page-item',\n        { disabled: isDisabled(nextPage) },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isDisabled(nextPage)}\n          onClick={() => onPageChange(nextPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const fromItem = (currentPage - 1) * perPage + 1;\n  const toItem = currentPage * perPage > total ? total : currentPage * perPage;\n\n  const visibleItems = getNumbers(fromItem, toItem);\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n\n    searchParams.set('page', '1');\n    searchParams.set('perPage', e.target.value);\n\n    setSearchParams(searchParams);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n\n    searchParams.set('page', page.toString());\n    searchParams.set('perPage', perPage.toString());\n\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n            defaultValue={perPage}\n          >\n            {[3, 5, 10, 20].map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={handlePageChange}\n      />\n      <ul>\n\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}